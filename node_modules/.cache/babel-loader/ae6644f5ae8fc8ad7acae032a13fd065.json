{"ast":null,"code":"import { compose, createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootSaga } from './root-saga';\nimport { rootReducer } from './root-reducer';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart']\n};\nconst sagaMiddleware = createSagaMiddleware();\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middleWares = [process.env.NODE_ENV !== 'production' && logger, sagaMiddleware].filter(middleware => Boolean(middleware));\nconst composeEnhancer = process.env.NODE_ENV !== 'production' && window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst composedEnhancers = composeEnhancer(applyMiddleware(...middleWares));\nexport const store = createStore(persistedReducer, undefined, composedEnhancers);\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);","map":{"version":3,"names":["compose","createStore","applyMiddleware","persistStore","persistReducer","storage","logger","createSagaMiddleware","rootSaga","rootReducer","persistConfig","key","whitelist","sagaMiddleware","persistedReducer","middleWares","process","env","NODE_ENV","filter","middleware","Boolean","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composedEnhancers","store","undefined","run","persistor"],"sources":["/Users/benjaminbenitez/Desktop/React/frenchfashion/FrenchFashionProject/src/store/store.ts"],"sourcesContent":["import { compose, createStore, applyMiddleware, Middleware } from 'redux';\nimport { persistStore, persistReducer, PersistConfig } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { rootSaga } from './root-saga';\n\nimport { rootReducer } from './root-reducer';\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\ntype ExtendedPersistConfig = PersistConfig<RootState> & {\n  whitelist: (keyof RootState)[];\n};\n\nconst persistConfig: ExtendedPersistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart'],\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst middleWares = [\n  process.env.NODE_ENV !== 'production' && logger,\n  sagaMiddleware,\n].filter((middleware): middleware is Middleware => Boolean(middleware));\n\nconst composeEnhancer =\n  (process.env.NODE_ENV !== 'production' &&\n    window &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst composedEnhancers = composeEnhancer(applyMiddleware(...middleWares));\n\nexport const store = createStore(\n  persistedReducer,\n  undefined,\n  composedEnhancers\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,WAAW,EAAEC,eAAe,QAAoB,OAAO;AACzE,SAASC,YAAY,EAAEC,cAAc,QAAuB,eAAe;AAC3E,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,SAASC,QAAQ,QAAQ,aAAa;AAEtC,SAASC,WAAW,QAAQ,gBAAgB;AAc5C,MAAMC,aAAoC,GAAG;EAC3CC,GAAG,EAAE,MAAM;EACXN,OAAO;EACPO,SAAS,EAAE,CAAC,MAAM;AACpB,CAAC;AAED,MAAMC,cAAc,GAAGN,oBAAoB,CAAC,CAAC;AAE7C,MAAMO,gBAAgB,GAAGV,cAAc,CAACM,aAAa,EAAED,WAAW,CAAC;AAEnE,MAAMM,WAAW,GAAG,CAClBC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIZ,MAAM,EAC/CO,cAAc,CACf,CAACM,MAAM,CAAEC,UAAU,IAA+BC,OAAO,CAACD,UAAU,CAAC,CAAC;AAEvE,MAAME,eAAe,GAClBN,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IACpCK,MAAM,IACNA,MAAM,CAACC,oCAAoC,IAC7CxB,OAAO;AAET,MAAMyB,iBAAiB,GAAGH,eAAe,CAACpB,eAAe,CAAC,GAAGa,WAAW,CAAC,CAAC;AAE1E,OAAO,MAAMW,KAAK,GAAGzB,WAAW,CAC9Ba,gBAAgB,EAChBa,SAAS,EACTF,iBACF,CAAC;AAEDZ,cAAc,CAACe,GAAG,CAACpB,QAAQ,CAAC;AAE5B,OAAO,MAAMqB,SAAS,GAAG1B,YAAY,CAACuB,KAAK,CAAC"},"metadata":{},"sourceType":"module"}