{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminbenitez/Desktop/React/frenchfashion/FrenchFashionProject/src/components/payment-form/payment-form.component.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useSelector } from 'react-redux';\nimport { selectCartTotal } from '../../store/cart/cart.selector';\nimport { selectCurrentUser } from '../../store/user/user.selector';\nimport { BUTTON_TYPE_CLASSES } from '../button/button.component';\nimport { PaymentFormContainer, FormContainer, PaymentButton } from './payment-form.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ifValidCardElement = card => card !== null;\nconst PaymentForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const amount = useSelector(selectCartTotal);\n  const currentUser = useSelector(selectCurrentUser);\n  const [isProcessingPayment, setIsProcessingPayment] = useState(false);\n  const paymentHandler = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    setIsProcessingPayment(true);\n    const response = await fetch('/.netlify/functions/create-payment-intent', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: amount * 100\n      })\n    }).then(res => res.json());\n    const {\n      paymentIntent: {\n        client_secret\n      }\n    } = response;\n    const cardDetails = elements.getElement(CardElement);\n    if (!ifValidCardElement(cardDetails)) return;\n    const paymentResult = await stripe.confirmCardPayment(client_secret, {\n      payment_method: {\n        card: cardDetails,\n        billing_details: {\n          name: currentUser ? currentUser.displayName : 'Guest'\n        }\n      }\n    });\n    setIsProcessingPayment(false);\n    if (paymentResult.error) {\n      alert(paymentResult.error);\n    } else {\n      if (paymentResult.paymentIntent.status === 'succeeded') {\n        alert('Payment Successful');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PaymentFormContainer, {\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      onSubmit: paymentHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Credit Card Payment: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PaymentButton, {\n        isLoading: isProcessingPayment,\n        buttonType: BUTTON_TYPE_CLASSES.inverted,\n        children: \"Pay now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentForm, \"zeZvNGpoSXJVIJ/CUzfiu8Kc5to=\", false, function () {\n  return [useStripe, useElements, useSelector, useSelector];\n});\n_c = PaymentForm;\nexport default PaymentForm;\nvar _c;\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["useState","CardElement","useStripe","useElements","useSelector","selectCartTotal","selectCurrentUser","BUTTON_TYPE_CLASSES","PaymentFormContainer","FormContainer","PaymentButton","jsxDEV","_jsxDEV","ifValidCardElement","card","PaymentForm","_s","stripe","elements","amount","currentUser","isProcessingPayment","setIsProcessingPayment","paymentHandler","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","then","res","json","paymentIntent","client_secret","cardDetails","getElement","paymentResult","confirmCardPayment","payment_method","billing_details","name","displayName","error","alert","status","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","isLoading","buttonType","inverted","_c","$RefreshReg$"],"sources":["/Users/benjaminbenitez/Desktop/React/frenchfashion/FrenchFashionProject/src/components/payment-form/payment-form.component.tsx"],"sourcesContent":["import { useState, FormEvent } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { StripeCardElement } from '@stripe/stripe-js';\nimport { useSelector } from 'react-redux';\n\nimport { selectCartTotal } from '../../store/cart/cart.selector';\nimport { selectCurrentUser } from '../../store/user/user.selector';\n\nimport { BUTTON_TYPE_CLASSES } from '../button/button.component';\n\nimport {\n  PaymentFormContainer,\n  FormContainer,\n  PaymentButton,\n} from './payment-form.styles';\n\nconst ifValidCardElement = (\n  card: StripeCardElement | null\n): card is StripeCardElement => card !== null;\n\n\nconst PaymentForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const amount = useSelector(selectCartTotal);\n  const currentUser = useSelector(selectCurrentUser);\n  const [isProcessingPayment, setIsProcessingPayment] = useState(false);\n\n  const paymentHandler = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    setIsProcessingPayment(true);\n\n    const response = await fetch('/.netlify/functions/create-payment-intent', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ amount: amount * 100 }),\n    }).then((res) => res.json());\n\n    const {\n      paymentIntent: { client_secret },\n    } = response;\n\n    const cardDetails = elements.getElement(CardElement);\n\n    if (!ifValidCardElement(cardDetails)) return;\n\n    const paymentResult = await stripe.confirmCardPayment(client_secret, {\n      payment_method: {\n        card: cardDetails,\n        billing_details: {\n          name: currentUser ? currentUser.displayName : 'Guest',\n        },\n      },\n    });\n\n    setIsProcessingPayment(false);\n\n    if (paymentResult.error) {\n      alert(paymentResult.error);\n    } else {\n      if (paymentResult.paymentIntent.status === 'succeeded') {\n        alert('Payment Successful');\n      }\n    }\n  };\n\n  return (\n    <PaymentFormContainer>\n      <FormContainer onSubmit={paymentHandler}>\n        <h2>Credit Card Payment: </h2>\n        <CardElement />\n        <PaymentButton\n          isLoading={isProcessingPayment}\n          buttonType={BUTTON_TYPE_CLASSES.inverted}\n        >\n          Pay now\n        </PaymentButton>\n      </FormContainer>\n    </PaymentFormContainer>\n  );\n};\n\nexport default PaymentForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}