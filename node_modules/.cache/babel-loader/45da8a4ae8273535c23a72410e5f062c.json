{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminbenitez/Desktop/React/frenchfashion/FrenchFashionProject/src/components/button/button.component.tsx\";\nimport { BaseButton, GoogleSignInButton, InvertedButton, ButtonSpinner } from './button.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let BUTTON_TYPE_CLASSES = /*#__PURE__*/function (BUTTON_TYPE_CLASSES) {\n  BUTTON_TYPE_CLASSES[\"Base\"] = \"base\";\n  BUTTON_TYPE_CLASSES[\"google\"] = \"google-sign-in\";\n  BUTTON_TYPE_CLASSES[\"inverted\"] = \"inverted\";\n  return BUTTON_TYPE_CLASSES;\n}({});\nconst getButton = function () {\n  let buttonType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : BUTTON_TYPE_CLASSES.Base;\n  return {\n    [BUTTON_TYPE_CLASSES.Base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n  }[buttonType];\n};\nconst Button = _ref => {\n  let {\n    children,\n    buttonType,\n    isLoading,\n    ...otherProps\n  } = _ref;\n  const CustomButton = getButton(buttonType);\n  return /*#__PURE__*/_jsxDEV(CustomButton, {\n    disabled: isLoading,\n    ...otherProps,\n    children: isLoading ? /*#__PURE__*/_jsxDEV(ButtonSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["BaseButton","GoogleSignInButton","InvertedButton","ButtonSpinner","jsxDEV","_jsxDEV","BUTTON_TYPE_CLASSES","getButton","buttonType","arguments","length","undefined","Base","google","inverted","Button","_ref","children","isLoading","otherProps","CustomButton","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/benjaminbenitez/Desktop/React/frenchfashion/FrenchFashionProject/src/components/button/button.component.tsx"],"sourcesContent":["import { FC, ButtonHTMLAttributes } from 'react';\n\nimport {\n  BaseButton,\n  GoogleSignInButton,\n  InvertedButton,\n  ButtonSpinner,\n} from './button.styles';\n\nexport enum BUTTON_TYPE_CLASSES {\n  Base = 'base',\n  google = 'google-sign-in',\n  inverted = 'inverted',\n}\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.Base): typeof BaseButton =>\n  ({\n    [BUTTON_TYPE_CLASSES.Base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\n  }[buttonType]);\n\nexport type ButtonProps = {\n  buttonType?: BUTTON_TYPE_CLASSES;\n  isLoading?: boolean;\n} & ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button: FC<ButtonProps> = ({\n  children,\n  buttonType,\n  isLoading,\n  ...otherProps\n}) => {\n  const CustomButton = getButton(buttonType);\n  return (\n    <CustomButton disabled={isLoading} {...otherProps}>\n      {isLoading ? <ButtonSpinner /> : children}\n    </CustomButton>\n  );\n};\n\nexport default Button;\n"],"mappings":";AAEA,SACEA,UAAU,EACVC,kBAAkB,EAClBC,cAAc,EACdC,aAAa,QACR,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,WAAYC,mBAAmB,0BAAnBA,mBAAmB;EAAnBA,mBAAmB;EAAnBA,mBAAmB;EAAnBA,mBAAmB;EAAA,OAAnBA,mBAAmB;AAAA;AAM/B,MAAMC,SAAS,GAAG,SAAAA,CAAA;EAAA,IAACC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGH,mBAAmB,CAACM,IAAI;EAAA,OACrD;IACC,CAACN,mBAAmB,CAACM,IAAI,GAAGZ,UAAU;IACtC,CAACM,mBAAmB,CAACO,MAAM,GAAGZ,kBAAkB;IAChD,CAACK,mBAAmB,CAACQ,QAAQ,GAAGZ;EAClC,CAAC,CAACM,UAAU,CAAC;AAAA,CAAC;AAOhB,MAAMO,MAAuB,GAAGC,IAAA,IAK1B;EAAA,IAL2B;IAC/BC,QAAQ;IACRT,UAAU;IACVU,SAAS;IACT,GAAGC;EACL,CAAC,GAAAH,IAAA;EACC,MAAMI,YAAY,GAAGb,SAAS,CAACC,UAAU,CAAC;EAC1C,oBACEH,OAAA,CAACe,YAAY;IAACC,QAAQ,EAAEH,SAAU;IAAA,GAAKC,UAAU;IAAAF,QAAA,EAC9CC,SAAS,gBAAGb,OAAA,CAACF,aAAa;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAGR;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEnB,CAAC;AAACC,EAAA,GAZIX,MAAuB;AAc7B,eAAeA,MAAM;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}