{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminbenitez/Desktop/React/frenchfashion/FrenchFashionProject/src/routes/category/category.component.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ProductCard from '../../components/product-card/product-card.component';\nimport Spinner from '../../components/spinner/spinner.component';\nimport { selectCategoriesMap, selectCategoriesIsLoading } from '../../store/categories/category.selector';\nimport { CategoryContainer, Title } from './category.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Category = () => {\n  _s();\n  const {\n    category\n  } = useParams();\n  const categoriesMap = useSelector(selectCategoriesMap);\n  const isLoading = useSelector(selectCategoriesIsLoading);\n  const [products, setProducts] = useState(categoriesMap[category]);\n  useEffect(() => {\n    setProducts(categoriesMap[category]);\n  }, [category, categoriesMap]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: category.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CategoryContainer, {\n      children: products && products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n        product: product\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Category, \"B+ZDZ+oVJ+Tm8HD77Df0szvYVUg=\", false, function () {\n  return [useParams, useSelector, useSelector];\n});\n_c = Category;\nexport default Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["useState","useEffect","Fragment","useSelector","useParams","ProductCard","Spinner","selectCategoriesMap","selectCategoriesIsLoading","CategoryContainer","Title","jsxDEV","_jsxDEV","Category","_s","category","categoriesMap","isLoading","products","setProducts","children","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","map","product","id","_c","$RefreshReg$"],"sources":["/Users/benjaminbenitez/Desktop/React/frenchfashion/FrenchFashionProject/src/routes/category/category.component.tsx"],"sourcesContent":["import { useState, useEffect, Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport ProductCard from '../../components/product-card/product-card.component';\nimport Spinner from '../../components/spinner/spinner.component';\n\nimport {\n  selectCategoriesMap,\n  selectCategoriesIsLoading,\n} from '../../store/categories/category.selector';\n\nimport { CategoryContainer, Title } from './category.styles';\n\ntype CategoryRouteParams = {\n  category: string;\n};\n\nconst Category = () => {\n  const { category } = useParams<\n    keyof CategoryRouteParams\n  >() as CategoryRouteParams;\n  const categoriesMap = useSelector(selectCategoriesMap);\n  const isLoading = useSelector(selectCategoriesIsLoading);\n  const [products, setProducts] = useState(categoriesMap[category]);\n\n  useEffect(() => {\n    setProducts(categoriesMap[category]);\n  }, [category, categoriesMap]);\n\n  return (\n    <Fragment>\n      <Title>{category.toUpperCase()}</Title>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <CategoryContainer>\n          {products &&\n            products.map((product) => (\n              <ProductCard key={product.id} product={product} />\n            ))}\n        </CategoryContainer>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Category;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACrD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,WAAW,MAAM,sDAAsD;AAC9E,OAAOC,OAAO,MAAM,4CAA4C;AAEhE,SACEC,mBAAmB,EACnBC,yBAAyB,QACpB,0CAA0C;AAEjD,SAASC,iBAAiB,EAAEC,KAAK,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM7D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAS,CAAC,GAAGX,SAAS,CAE5B,CAAwB;EAC1B,MAAMY,aAAa,GAAGb,WAAW,CAACI,mBAAmB,CAAC;EACtD,MAAMU,SAAS,GAAGd,WAAW,CAACK,yBAAyB,CAAC;EACxD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAACgB,aAAa,CAACD,QAAQ,CAAC,CAAC;EAEjEd,SAAS,CAAC,MAAM;IACdkB,WAAW,CAACH,aAAa,CAACD,QAAQ,CAAC,CAAC;EACtC,CAAC,EAAE,CAACA,QAAQ,EAAEC,aAAa,CAAC,CAAC;EAE7B,oBACEJ,OAAA,CAACV,QAAQ;IAAAkB,QAAA,gBACPR,OAAA,CAACF,KAAK;MAAAU,QAAA,EAAEL,QAAQ,CAACM,WAAW,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACtCR,SAAS,gBACRL,OAAA,CAACN,OAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEXb,OAAA,CAACH,iBAAiB;MAAAW,QAAA,EACfF,QAAQ,IACPA,QAAQ,CAACQ,GAAG,CAAEC,OAAO,iBACnBf,OAAA,CAACP,WAAW;QAAkBsB,OAAO,EAAEA;MAAQ,GAA7BA,OAAO,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa,CACpB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEf,CAAC;AAACX,EAAA,CA3BID,QAAQ;EAAA,QACST,SAAS,EAGRD,WAAW,EACfA,WAAW;AAAA;AAAA0B,EAAA,GALzBhB,QAAQ;AA6Bd,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}