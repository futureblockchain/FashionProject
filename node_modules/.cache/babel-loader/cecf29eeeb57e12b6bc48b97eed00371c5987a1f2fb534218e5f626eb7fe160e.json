{"ast":null,"code":"import { call as _call } from \"redux-saga/effects\";\nimport { all as _all } from \"redux-saga/effects\";\nimport { put as _put } from \"redux-saga/effects\";\nimport { takeLatest as _takeLatest } from \"redux-saga/effects\";\nimport { USER_ACTION_TYPES } from './user.types';\nimport { signInSuccess, signInFailed, signUpSuccess, signUpFailed, signOutSuccess, signOutFailed } from './user.action';\nimport { getCurrentUser, createUserDocumentFromAuth, signInWithGooglePopup, signInAuthUserWithEmailAndPassword, createAuthUserWithEmailAndPassword, signOutUser } from '../../utils/firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, additionalDetails) {\n  try {\n    const userSnapshot = yield _call(createUserDocumentFromAuth, userAuth, additionalDetails);\n    if (userSnapshot) {\n      yield _put(signInSuccess({\n        id: userSnapshot.id,\n        ...userSnapshot.data()\n      }));\n    }\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield _call(signInWithGooglePopup);\n    yield _call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\nexport function signInWithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n  return function* () {\n    try {\n      const userCredential = yield _call(signInAuthUserWithEmailAndPassword, email, password);\n      if (userCredential) {\n        const {\n          user\n        } = userCredential;\n        yield _call(getSnapshotFromUserAuth, user);\n      }\n    } catch (error) {\n      yield _put(signInFailed(error));\n    }\n  }();\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield _call(getCurrentUser);\n    if (!userAuth) return;\n    yield _call(getSnapshotFromUserAuth, userAuth);\n  } catch (error) {\n    yield _put(signInFailed(error));\n  }\n}\nexport function signUp(_ref2) {\n  let {\n    payload: {\n      email,\n      password,\n      displayName\n    }\n  } = _ref2;\n  return function* () {\n    try {\n      const userCredential = yield _call(createAuthUserWithEmailAndPassword, email, password);\n      if (userCredential) {\n        const {\n          user\n        } = userCredential;\n        yield _put(signUpSuccess(user, {\n          displayName\n        }));\n      }\n    } catch (error) {\n      yield _put(signUpFailed(error));\n    }\n  }();\n}\nexport function* signOut() {\n  try {\n    yield _call(signOutUser);\n    yield _put(signOutSuccess());\n  } catch (error) {\n    yield _put(signOutFailed(error));\n  }\n}\nexport function signInAfterSignUp(_ref3) {\n  let {\n    payload: {\n      user,\n      additionalDetails\n    }\n  } = _ref3;\n  return function* () {\n    yield _call(getSnapshotFromUserAuth, user, additionalDetails);\n  }();\n}\nexport function* onGoogleSignInStart() {\n  yield _takeLatest(USER_ACTION_TYPES.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onCheckUserSession() {\n  yield _takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onEmailSignInStart() {\n  yield _takeLatest(USER_ACTION_TYPES.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onSignUpStart() {\n  yield _takeLatest(USER_ACTION_TYPES.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield _takeLatest(USER_ACTION_TYPES.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onSignOutStart() {\n  yield _takeLatest(USER_ACTION_TYPES.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield _all([_call(onCheckUserSession), _call(onGoogleSignInStart), _call(onEmailSignInStart), _call(onSignUpStart), _call(onSignUpSuccess), _call(onSignOutStart)]);\n}","map":{"version":3,"names":["USER_ACTION_TYPES","signInSuccess","signInFailed","signUpSuccess","signUpFailed","signOutSuccess","signOutFailed","getCurrentUser","createUserDocumentFromAuth","signInWithGooglePopup","signInAuthUserWithEmailAndPassword","createAuthUserWithEmailAndPassword","signOutUser","getSnapshotFromUserAuth","userAuth","additionalDetails","userSnapshot","call","put","id","data","error","signInWithGoogle","user","signInWithEmail","_ref","payload","email","password","userCredential","isUserAuthenticated","signUp","_ref2","displayName","signOut","signInAfterSignUp","_ref3","onGoogleSignInStart","takeLatest","GOOGLE_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onEmailSignInStart","EMAIL_SIGN_IN_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","onSignOutStart","SIGN_OUT_START","userSagas","all"],"sources":["/Users/benjaminbenitez/Desktop/React/FashionProject/src/store/user/user.saga.ts"],"sourcesContent":["import { takeLatest, put, all, call } from 'typed-redux-saga/macro';\nimport { User } from 'firebase/auth';\n\nimport { USER_ACTION_TYPES } from './user.types';\n\nimport {\n  signInSuccess,\n  signInFailed,\n  signUpSuccess,\n  signUpFailed,\n  signOutSuccess,\n  signOutFailed,\n  EmailSignInStart,\n  SignUpStart,\n  SignUpSuccess,\n} from './user.action';\n\nimport {\n  getCurrentUser,\n  createUserDocumentFromAuth,\n  signInWithGooglePopup,\n  signInAuthUserWithEmailAndPassword,\n  createAuthUserWithEmailAndPassword,\n  signOutUser,\n  AdditionalInformation,\n} from '../../utils/firebase/firebase.utils';\n\nexport function* getSnapshotFromUserAuth(\n  userAuth: User,\n  additionalDetails?: AdditionalInformation\n) {\n  try {\n    const userSnapshot = yield* call(\n      createUserDocumentFromAuth,\n      userAuth,\n      additionalDetails\n    );\n\n    if (userSnapshot) {\n      yield* put(\n        signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n      );\n    }\n  } catch (error) {\n    yield* put(signInFailed(error as Error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield* call(signInWithGooglePopup);\n    yield* call(getSnapshotFromUserAuth, user);\n  } catch (error) {\n    yield* put(signInFailed(error as Error));\n  }\n}\n\nexport function* signInWithEmail({\n  payload: { email, password },\n}: EmailSignInStart) {\n  try {\n    const userCredential = yield* call(\n      signInAuthUserWithEmailAndPassword,\n      email,\n      password\n    );\n\n    if (userCredential) {\n      const { user } = userCredential;\n      yield* call(getSnapshotFromUserAuth, user);\n    }\n  } catch (error) {\n    yield* put(signInFailed(error as Error));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield* call(getCurrentUser);\n    if (!userAuth) return;\n    yield* call(getSnapshotFromUserAuth, userAuth);\n  } catch (error) {\n    yield* put(signInFailed(error as Error));\n  }\n}\n\nexport function* signUp({\n  payload: { email, password, displayName },\n}: SignUpStart) {\n  try {\n    const userCredential = yield* call(\n      createAuthUserWithEmailAndPassword,\n      email,\n      password\n    );\n\n    if (userCredential) {\n      const { user } = userCredential;\n      yield* put(signUpSuccess(user, { displayName }));\n    }\n  } catch (error) {\n    yield* put(signUpFailed(error as Error));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield* call(signOutUser);\n    yield* put(signOutSuccess());\n  } catch (error) {\n    yield* put(signOutFailed(error as Error));\n  }\n}\n\nexport function* signInAfterSignUp({\n  payload: { user, additionalDetails },\n}: SignUpSuccess) {\n  yield* call(getSnapshotFromUserAuth, user, additionalDetails);\n}\n\nexport function* onGoogleSignInStart() {\n  yield* takeLatest(USER_ACTION_TYPES.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onCheckUserSession() {\n  yield* takeLatest(USER_ACTION_TYPES.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onEmailSignInStart() {\n  yield* takeLatest(USER_ACTION_TYPES.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onSignUpStart() {\n  yield* takeLatest(USER_ACTION_TYPES.SIGN_UP_START, signUp);\n}\n\nexport function* onSignUpSuccess() {\n  yield* takeLatest(USER_ACTION_TYPES.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\nexport function* onSignOutStart() {\n  yield* takeLatest(USER_ACTION_TYPES.SIGN_OUT_START, signOut);\n}\n\nexport function* userSagas() {\n  yield* all([\n    call(onCheckUserSession),\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onSignUpStart),\n    call(onSignUpSuccess),\n    call(onSignOutStart),\n  ]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}