{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDDU4V-_QV3M8GyhC9SVieRTDM4dbiT0Yk',\n  authDomain: 'crwn-clothing-db-98d4d.firebaseapp.com',\n  projectId: 'crwn-clothing-db-98d4d',\n  storageBucket: 'crwn-clothing-db-98d4d.appspot.com',\n  messagingSenderId: '626766232035',\n  appId: '1:626766232035:web:506621582dab103a4d08d6'\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log('done');\n};\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(docSnapshot => docSnapshot.data());\n};\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error);\n    }\n  }\n  return userSnapshot;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = onAuthStateChanged(auth, userAuth => {\n      console.log(unsubscribe);\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","query","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","getCategoriesAndDocuments","q","querySnapshot","docs","map","docSnapshot","data","createUserDocumentFromAuth","userAuth","additionalInformation","arguments","length","undefined","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback","getCurrentUser","Promise","resolve","reject","unsubscribe"],"sources":["/Users/benjaminbenitez/Desktop/React/frenchfashion/FrenchFashionProject/src/utils/firebase/firebase.utils.ts"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  NextOrObserver,\n  User,\n} from 'firebase/auth';\nimport {\n  getFirestore,\n  doc,\n  getDoc,\n  setDoc,\n  collection,\n  writeBatch,\n  query,\n  getDocs,\n  QueryDocumentSnapshot,\n} from 'firebase/firestore';\n\nimport { Category } from '../../store/categories/category.types';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDDU4V-_QV3M8GyhC9SVieRTDM4dbiT0Yk',\n  authDomain: 'crwn-clothing-db-98d4d.firebaseapp.com',\n  projectId: 'crwn-clothing-db-98d4d',\n  storageBucket: 'crwn-clothing-db-98d4d.appspot.com',\n  messagingSenderId: '626766232035',\n  appId: '1:626766232035:web:506621582dab103a4d08d6',\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account',\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () =>\n  signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () =>\n  signInWithRedirect(auth, googleProvider);\n\nexport const db = getFirestore();\n\nexport type ObjectToAdd = {\n  title: string;\n};\n\nexport const addCollectionAndDocuments = async <T extends ObjectToAdd>(\n  collectionKey: string,\n  objectsToAdd: T[]\n): Promise<void> => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n\n  objectsToAdd.forEach((object) => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n\n  await batch.commit();\n  console.log('done');\n};\n\nexport const getCategoriesAndDocuments = async (): Promise<Category[]> => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(\n    (docSnapshot) => docSnapshot.data() as Category\n  );\n};\n\nexport type AdditionalInformation = {\n  displayName?: string;\n};\n\nexport type UserData = {\n  createdAt: Date;\n  displayName: string;\n  email: string;\n};\n\nexport const createUserDocumentFromAuth = async (\n  userAuth: User,\n  additionalInformation = {} as AdditionalInformation\n): Promise<void | QueryDocumentSnapshot<UserData>> => {\n  if (!userAuth) return;\n\n  const userDocRef = doc(db, 'users', userAuth.uid);\n\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation,\n      });\n    } catch (error) {\n      console.log('error creating the user', error);\n    }\n  }\n\n  return userSnapshot as QueryDocumentSnapshot<UserData>;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (\n  email: string,\n  password: string\n) => {\n  if (!email || !password) return;\n\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const signInAuthUserWithEmailAndPassword = async (\n  email: string,\n  password: string\n) => {\n  if (!email || !password) return;\n\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const signOutUser = async () => await signOut(auth);\n\nexport const onAuthStateChangedListener = (callback: NextOrObserver<User>) =>\n  onAuthStateChanged(auth, callback);\n\nexport const getCurrentUser = (): Promise<User | null> => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = onAuthStateChanged(\n      auth,\n      (userAuth) => {\n        console.log(unsubscribe);\n        unsubscribe();\n        resolve(userAuth);\n      },\n      reject\n    );\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}