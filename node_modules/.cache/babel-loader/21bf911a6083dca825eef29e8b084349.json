{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootSaga } from './root-saga';\nimport { rootReducer } from './root-reducer';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart']\n};\nconst sagaMiddleware = createSagaMiddleware();\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middleWares = [process.env.NODE_ENV !== 'production' && logger, sagaMiddleware].filter(Boolean);\nconst composeEnhancer = process.env.NODE_ENV !== 'production' && window && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(persistedReducer, composeEnhancer(applyMiddleware(...middleWares)));\nsagaMiddleware.run(rootSaga);\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"names":["createStore","applyMiddleware","compose","persistStore","persistReducer","storage","logger","createSagaMiddleware","rootSaga","rootReducer","persistConfig","key","whitelist","sagaMiddleware","persistedReducer","middleWares","process","env","NODE_ENV","filter","Boolean","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run","persistor"],"sources":["/Users/benjaminbenitez/Desktop/React/frenchfashion/FrenchFashionProject/src/store/store.ts"],"sourcesContent":["import { createStore, applyMiddleware, compose, Middleware } from 'redux';\nimport { persistStore, persistReducer, PersistConfig } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { rootSaga } from './root-saga';\nimport { rootReducer } from './root-reducer';\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\ntype ExtendedPersistConfig = PersistConfig<RootState> & {\n  whitelist: (keyof RootState)[];\n};\n\nconst persistConfig: ExtendedPersistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart'],\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst middleWares = [\n  process.env.NODE_ENV !== 'production' && logger,\n  sagaMiddleware,\n].filter(Boolean) as Middleware[];\n\nconst composeEnhancer =\n  (process.env.NODE_ENV !== 'production' &&\n    window &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(\n  persistedReducer,\n  composeEnhancer(applyMiddleware(...middleWares))\n);\n\nsagaMiddleware.run(rootSaga);\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,OAAO,QAAoB,OAAO;AACzE,SAASC,YAAY,EAAEC,cAAc,QAAuB,eAAe;AAC3E,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,QAAQ,gBAAgB;AAc5C,MAAMC,aAAoC,GAAG;EAC3CC,GAAG,EAAE,MAAM;EACXN,OAAO;EACPO,SAAS,EAAE,CAAC,MAAM;AACpB,CAAC;AAED,MAAMC,cAAc,GAAGN,oBAAoB,CAAC,CAAC;AAE7C,MAAMO,gBAAgB,GAAGV,cAAc,CAACM,aAAa,EAAED,WAAW,CAAC;AAEnE,MAAMM,WAAW,GAAG,CAClBC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIZ,MAAM,EAC/CO,cAAc,CACf,CAACM,MAAM,CAACC,OAAO,CAAiB;AAEjC,MAAMC,eAAe,GAClBL,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IACpCI,MAAM,IACNA,MAAM,CAACC,oCAAoC,IAC7CrB,OAAO;AAET,MAAMsB,KAAK,GAAGxB,WAAW,CACvBc,gBAAgB,EAChBO,eAAe,CAACpB,eAAe,CAAC,GAAGc,WAAW,CAAC,CACjD,CAAC;AAEDF,cAAc,CAACY,GAAG,CAACjB,QAAQ,CAAC;AAE5B,MAAMkB,SAAS,GAAGvB,YAAY,CAACqB,KAAK,CAAC;AAErC,SAASA,KAAK,EAAEE,SAAS"},"metadata":{},"sourceType":"module"}